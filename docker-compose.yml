version: "2.2"

services:
  eureka_server:
    privileged: true
    networks:
      msa_network:
        ipv4_address: 172.24.0.2
    build:
      context: "./eureka_server/cloud-discovery-eureka-server"
      dockerfile: "./docker/Dockerfile"
    volumes:
      - ./eureka_server/cloud-discovery-eureka-server:/home/eureka_server
    ports:
      - "${EUREKA_PORT:-8761}:8761"
    container_name: eureka_server
  api_gateway:
    depends_on:
      - "eureka_server"
    networks:
      msa_network:
        ipv4_address: 172.24.0.3
    build:
      context: "./api-gateway/apigate-service"
      dockerfile: "./docker/Dockerfile"
    volumes:
      - ./api-gateway/apigate-service:/home/api_gateway
    ports:
      - "${API_GATE_PORT:-8000}:8000"
    container_name: api_gateway
    restart: "unless-stopped"
    stop_grace_period: "50s"
  msa_booker_db:
    ports:
      - "${BOOKER_DB:-3306}:3306"
    depends_on:
      - "api_gateway"
    restart: "unless-stopped"
    container_name: msa_booker_db
    environment:
      - MARIADB_ROOT_PASSWORD=eddy
      - MYSQL_USER=eddy
      - MYSQL_PASSWORD=eddy
      - MYSQL_DATABASE=msa
      - TZ=Asia/Seoul
    networks:
      msa_network:
        ipv4_address: 172.24.0.4
    build:
      context: "./"
      dockerfile: "mariadb/docker/booker/Dockerfile"
#    command:
#      - character-set-server=utf8mb4
#      - collation-server=utf8mb4_unicode_ci
  msa_user_db:
    depends_on:
      - "api_gateway"
    restart: "unless-stopped"
    container_name: msa_user_db
    networks:
      msa_network:
        ipv4_address: 172.24.0.5
    environment:
      - MARIADB_ROOT_PASSWORD=eddy
      - MYSQL_USER=eddy
      - MYSQL_PASSWORD=eddy
      - MYSQL_DATABASE=msa
      - TZ=Asia/Seoul
    build:
      context: "./"
      dockerfile: "mariadb/docker/user/Dockerfile"
#    command:
#      - --character-set-server=utf8mb4
#      - --collation-server=utf8mb4_unicode_ci
  spring_kafka:
    depends_on:
      - "msa_booker_db"
    build:
      context: "./springKafka"
      dockerfile: "./docker/Dockerfile"
    networks:
      msa_network:
        ipv4_address: 172.24.0.6
    volumes:
      - ./springKafka:/home/springKafka
    ports:
      - "${KAFKA_PORT:-8080}:8080"
    restart: "unless-stopped"
  user_service:
    restart: "unless-stopped"
    depends_on:
      - "msa_user_db"
    build:
      context: "./user-service"
      dockerfile: "./docker/Dockerfile"
    networks:
      msa_network:
        ipv4_address: 172.24.0.7
    volumes:
      - ./user-service:/home/user-service
    ports:
      - "${USER_PORT:-8082}:8082"
networks:
  msa_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.24.0.0/16 #172.24 대역으로 네트워크 망 생성
volumes:
  api_gateway:
  eureka_server:

