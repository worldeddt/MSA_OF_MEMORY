# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["service"]
  pull_request:
    branches: ["service"]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: ✅Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: ✨패키징
        working-directory: ./
        run: |
          zip -r booker.zip ./appspec.yml ./scripts/services/booker ./springKafka
      - name: 🌎 AWS에 접속
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: 🦖 S3에 압축된 서버 코드를 업로드
        run: aws s3 cp --region ap-northeast-2 ./booker.zip s3://eddy-deploy-s3-one/service/booker

      - name: 🚀 AWS codeDeploy로 배포를 시작
        run: aws deploy create-deployment
          --application-name eddy_deploy_application
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name eddy_deploy_group_one
          --s3-location bucket=eddy-deploy-s3-one,bundleType=zip,key=deploy/msa_of_memory.zip

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#      - name: Update dependency graph
#        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
